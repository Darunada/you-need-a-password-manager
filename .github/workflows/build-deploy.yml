name: "Build & Deploy"

on:
  workflow_dispatch:

  push:
    branches:
    - master

jobs:
  install:
    name: "Installing application"
    runs-on: ubuntu-latest
    steps:
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: "Checking out code..."
        uses: actions/checkout@v2

      - name: "Installing dependencies..."
        run: npm ci

      - name: "Caching node modules..."
          uses: actions/cache@v2
          env:
            cache-name: cache-node-modules
          with:
            # npm cache files are stored in `~/.npm` on Linux/macOS
            path: ~/.npm
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-build-${{ env.cache-name }}-
              ${{ runner.os }}-build-
              ${{ runner.os }}-

  test:
    name: "Running tests..."
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: "Using Node.js..."
          uses: actions/setup-node@v1
          with:
            node-version: '12.x'

      - name: "Installing dependencies..."
        run: npm ci

      - name: "Running style checks..."
        run: npm run ci:test:lint

      - name: "Running unit tests..."
        run: npm run ci:test:unit

      - name: "Running E2E tests..."
        run: npm run ci:test:e2e:record

  deploy:
    needs: build
    name: "Deploying to production...."
    runs-on: ubuntu-latest
    steps:
      - name: "Using Node.js..."
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: "Installing dependencies..."
        run: npm ci

      - name: "Building for production..."
        run: npm run ci:build:production

      - name: "Deploying to bucket: ${{ secrets.AWS_S3_BUCKET }}..."
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: 'dist'
